{"version":3,"sources":["components/Spinner/Spinner.module.scss","containers/Layout/Layout.module.scss","components/Card/Card.module.scss","components/ErrorMessage/ErrorMessage.module.scss","components/SideDrawer/DrawerToogle/DrawerToggle.module.scss","assets/logo.png","components/Logo/Logo.module.scss","components/NavigationItems/NavigationItems.module.scss","components/Backdrop/Backdrop.module.scss","containers/ResetPassword/ResetPassword.module.scss","containers/CreateLog/CreateLog.module.scss","components/Spinner/Spinner.js","context/authentication.js","containers/Login/Login.js","containers/Register/Register.js","components/SideDrawer/DrawerToogle/DrawerToggle.js","components/Logo/Logo.js","components/NavigationItems/NavigationItem/NavigationItem.js","components/NavigationItems/NavigationItems.js","components/Toolbar/Toolbar.js","components/Backdrop/Backdrop.js","components/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","containers/RecoveryPassword/RecoveryPassword.js","containers/ResetPassword/ResetPassword.js","containers/CreateLog/CreateLog.js","App.js","serviceWorker.js","index.js","components/Card/Card.js","components/ErrorMessage/ErrorMessage.js","components/SideDrawer/SideDrawer.module.scss","containers/Login/Login.module.scss","containers/Register/Register.module.scss","components/NavigationItems/NavigationItem/NavigationItem.module.scss","components/Toolbar/Toolbar.module.scss","containers/RecoveryPassword/RecoveryPassword.module.scss"],"names":["module","exports","Spinner","props","wrapper","showBackground","classes","Background","className","Loader","authContext","React","createContext","authenticated","logout","login","Login","state","error","loading","handleSubmit","event","preventDefault","form","validateFields","err","values","setState","data","email","password","axios","post","then","res","localStorage","setItem","token","defaults","headers","common","context","history","push","catch","response","message","console","log","getFieldDecorator","this","onSubmit","loginForm","Item","rules","type","required","placeholder","pattern","validator","validateToNextPassword","htmlType","loginFormButton","to","loginFormForgot","Card","ErrorMessage","Component","contextType","AuthContext","WrappedLogin","Form","create","name","SignUp","confirmDirty","e","validateFieldsAndScroll","handleConfirmBlur","value","target","compareToFirstPassword","rule","callback","getFieldValue","force","tailFormItemLayout","wrapperCol","xs","span","offset","sm","Register","labelCol","label","title","whitespace","hasFeedback","Password","onBlur","Button","wrappedSignUp","DrawerToggle","onClick","clicked","Logo","src","owLogo","alt","NavigationItem","navigationItem","itemType","link","exact","activeClassName","active","children","NavigationItems","Consumer","Toolbar","drawerToggleClicked","MobileOnly","Backdrop","showBackdrop","SideDrawer","attachedClasses","isOpen","Open","Close","close","join","Layout","sideDrawerIsShown","toggleSideDrawerHandler","prevState","Content","RecoveryPassword","emailSentMessage","WrappedRecoveryPassword","ResetPassword","match","params","put","success","content","key","duration","WrappedResetPassword","CreateLog","role","rating","date","initialValue","Group","buttonStyle","size","moment","min","max","WrappedCreateLog","MainPage","lazy","App","isAuthenticated","routes","path","component","ReserPassword","Provider","clear","Boolean","window","location","hostname","baseURL","app","fallback","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01088a28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"Spinner_Background__1pu95\",\"Loader\":\"Spinner_Loader__3yop2\",\"load4\":\"Spinner_load4__1ZdaZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2ET4a\",\"Content\":\"Layout_Content__1DyxT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__1o_Pl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorMessage\":\"ErrorMessage_ErrorMessage__XKeK6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3EcD6\"};","module.exports = __webpack_public_path__ + \"static/media/logo.77f3995e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1SHtx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3JHgv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__27kTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ResetPassword\":\"ResetPassword_ResetPassword__211kZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateLog\":\"CreateLog_CreateLog__2hTAa\"};","import React from 'react';\r\n\r\nimport classes from './Spinner.module.scss';\r\n\r\nconst Spinner = props => {\r\n    let wrapper = '';\r\n    if (props.showBackground)  {\r\n        wrapper = classes.Background;\r\n    }\r\n\r\n  return (\r\n    <div className={wrapper}>\r\n      <div className={classes.Loader}>Loading...</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\n\r\nconst authContext = React.createContext({\r\n  authenticated: false,\r\n  logout: () => {},\r\n  login: () => {},\r\n});\r\n\r\nexport default authContext;\r\n","import React, { Component } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport AuthContext from '../../context/authentication';\r\nimport Card from '../../components/Card/Card';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\r\n\r\nimport classes from './Login.module.scss';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  static contextType = AuthContext;\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.setState({ error: null, loading: true });\r\n        const data = {\r\n          email: values.email,\r\n          password: values.password,\r\n        };\r\n        axios\r\n          .post('user/login', data)\r\n          .then(res => {\r\n            localStorage.setItem('token', res.data.token);\r\n            axios.defaults.headers.common['Authorization'] = res.data.token;\r\n            this.setState({ loading: false });\r\n            this.context.login();\r\n            this.props.history.push('/');\r\n          })\r\n          .catch(error => {\r\n            this.setState({\r\n              error: error.response.data.message,\r\n              loading: false,\r\n            });\r\n            console.log(error.response);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { error, loading } = this.state;\r\n\r\n    let form = (\r\n      <Form onSubmit={this.handleSubmit} className={classes.loginForm}>\r\n        <Form.Item>\r\n          {getFieldDecorator('email', {\r\n            rules: [\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n            ],\r\n          })(<Input placeholder='E-mail' />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('password', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n              {\r\n                pattern: /^(?=.*[0-9])(?=.*[a-zA-Z])[0-9a-zA-Z!@#$%^&*]{6,18}$/,\r\n                message: 'Must be 6-18 chars (include 1 letter and number)',\r\n              },\r\n              {\r\n                validator: this.validateToNextPassword,\r\n              },\r\n            ],\r\n          })(<Input type='password' placeholder='Password' />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type='primary'\r\n            htmlType='submit'\r\n            className={classes.loginFormButton}\r\n          >\r\n            Log in\r\n          </Button>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Link to={'/recovery/password'} className={classes.loginFormForgot}>\r\n            Forgot password\r\n          </Link>\r\n          Or <Link to='/register'>register now!</Link>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.Login}>\r\n        <Card>\r\n          <h1>Login</h1>\r\n          {loading && <Spinner showBackground />}\r\n          {error && <ErrorMessage>{error} Try again!</ErrorMessage>}\r\n          {form}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedLogin = Form.create({ name: 'normal_login ' })(Login);\r\n\r\nexport default WrappedLogin;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Form, Input, Icon, Tooltip, Button } from 'antd';\r\n\r\nimport Card from '../../components/Card/Card';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\r\n\r\nimport classes from './Register.module.scss';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.setState({ error: null, loading: true });\r\n        console.log('Received values of form: ', values);\r\n        const data = {\r\n          name: values.name,\r\n          email: values.email,\r\n          password: values.password,\r\n        };\r\n\r\n        axios\r\n          .post('/user/signup', data)\r\n          .then(res => {\r\n            this.setState({ loading: false });\r\n            // localStorage.setItem('token', res.data.token);\r\n            this.props.history.push('/login');\r\n          })\r\n          .catch(error => {\r\n            console.log(error.response);\r\n            this.setState({\r\n              error: error.response.data.message,\r\n              loading: false,\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { error, loading } = this.state;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 7 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 10,\r\n        },\r\n        sm: {\r\n          span: 15,\r\n          offset: 7,\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div className={classes.Register}>\r\n        <Card>\r\n          <h1>Create your account</h1>\r\n          {error &&\r\n          error ===\r\n            'User validation failed: email: E-mail address already exists.' ? (\r\n            <ErrorMessage>E-mail address already exists.</ErrorMessage>\r\n          ) : null}\r\n          {loading && <Spinner showBackground />}\r\n          <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n            <Form.Item label='E-mail'>\r\n              {getFieldDecorator('email', {\r\n                rules: [\r\n                  {\r\n                    type: 'email',\r\n                    message: 'The input is not valid E-mail!',\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your E-mail!',\r\n                  },\r\n                ],\r\n              })(<Input />)}\r\n            </Form.Item>\r\n            <Form.Item\r\n              label={\r\n                <span>\r\n                  Name&nbsp;\r\n                  <Tooltip title='What do you want others to call you?'>\r\n                    <Icon type='question-circle-o' />\r\n                  </Tooltip>\r\n                </span>\r\n              }\r\n            >\r\n              {getFieldDecorator('name', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your name!',\r\n                    whitespace: true,\r\n                  },\r\n                ],\r\n              })(<Input />)}\r\n            </Form.Item>\r\n            <Form.Item label='Password' hasFeedback>\r\n              {getFieldDecorator('password', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your Password!',\r\n                  },\r\n                  {\r\n                    pattern: /^(?=.*[0-9])(?=.*[a-zA-Z])[0-9a-zA-Z!@#$%^&*]{6,18}$/,\r\n                    message: 'Must be 6-18 chars (include 1 letter and number)',\r\n                  },\r\n                  {\r\n                    validator: this.validateToNextPassword,\r\n                  },\r\n                ],\r\n              })(<Input.Password />)}\r\n            </Form.Item>\r\n            <Form.Item label='Confirm Password' hasFeedback>\r\n              {getFieldDecorator('confirm', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: 'Please confirm your password!',\r\n                  },\r\n                  {\r\n                    validator: this.compareToFirstPassword,\r\n                  },\r\n                ],\r\n              })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button\r\n                className={classes.Button}\r\n                type='primary'\r\n                htmlType='submit'\r\n              >\r\n                Register\r\n              </Button>\r\n              <Link to={'/login'} className={classes.loginFormForgot}>\r\n                Login in\r\n              </Link>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst wrappedSignUp = Form.create({ name: 'register' })(SignUp);\r\n\r\nexport default wrappedSignUp;\r\n","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.scss';\r\n\r\nconst DrawerToggle = props => {\r\n    return (\r\n        <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DrawerToggle;","import React from 'react';\r\n\r\nimport owLogo from '../../assets/logo.png';\r\n\r\nimport classes from './Logo.module.scss';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className={classes.Logo}>\r\n            <img src={owLogo} alt=\"OW Logo\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.scss';\r\n\r\nconst NavigationItem = props => {\r\n  let navigationItem = null;\r\n\r\n  switch (props.itemType) {\r\n    case 'logout':\r\n      navigationItem = (\r\n        <NavLink\r\n          to={props.link}\r\n          exact={props.exact}\r\n          activeClassName={classes.active}\r\n          onClick={props.clicked}\r\n        >\r\n          {props.children}\r\n        </NavLink>\r\n      );\r\n      break;\r\n\r\n    default:\r\n      navigationItem = (\r\n        <NavLink\r\n          to={props.link}\r\n          exact={props.exact}\r\n          activeClassName={classes.active}\r\n        >\r\n          {props.children}\r\n        </NavLink>\r\n      );\r\n  }\r\n  return <li className={classes.NavigationItem}>{navigationItem}</li>;\r\n};\r\n\r\nexport default NavigationItem;\r\n","import React from 'react';\r\n\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport AuthContext from '../../context/authentication';\r\n\r\nimport classes from './NavigationItems.module.scss';\r\n\r\nconst NavigationItems = props => {\r\n  return (\r\n    <ul className={classes.NavigationItems}>\r\n      <NavigationItem link='/' exact>\r\n        Main Page\r\n      </NavigationItem>\r\n      <NavigationItem link='/create'>Create Log</NavigationItem>\r\n      <AuthContext.Consumer>\r\n        {context => (\r\n          <NavigationItem\r\n            clicked={context.logout}\r\n            itemType='logout'\r\n            link='/login'\r\n          >\r\n            Logout\r\n          </NavigationItem>\r\n        )}\r\n      </AuthContext.Consumer>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavigationItems;\r\n","import React from 'react';\r\n\r\nimport DrawerToggle from '../SideDrawer/DrawerToogle/DrawerToggle';\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\n\r\nimport classes from './Toolbar.module.scss';\r\n\r\nconst Toolbar = props => {\r\n  return (\r\n    <header className={classes.Toolbar}>\r\n      <DrawerToggle clicked={props.drawerToggleClicked} />\r\n      <div className={classes.Logo}>\r\n        <Logo />\r\n      </div>\r\n      <nav className={classes.MobileOnly}>\r\n          <NavigationItems />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.scss';\r\n\r\nconst Backdrop = props =>\r\n  props.showBackdrop ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null;\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\r\n\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\n\r\nimport classes from './SideDrawer.module.scss';\r\n\r\nconst SideDrawer = props => {\r\n    let attachedClasses = props.isOpen ? [classes.SideDrawer, classes.Open] : [classes.SideDrawer, classes.Close];\r\n  return (\r\n    <>\r\n      <Backdrop showBackdrop={props.isOpen} clicked={props.close} />\r\n      <div className={attachedClasses.join(' ')} onClick={props.close}>\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavigationItems />\r\n        </nav>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { Component } from 'react';\r\n\r\nimport AuthContext from '../../context/authentication';\r\nimport Toolbar from '../../components/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/SideDrawer/SideDrawer';\r\n\r\nimport classes from './Layout.module.scss';\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    sideDrawerIsShown: false,\r\n  };\r\n\r\n  toggleSideDrawerHandler = () => {\r\n    this.setState(prevState => {\r\n      return { sideDrawerIsShown: !prevState.sideDrawerIsShown };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Layout}>\r\n        <AuthContext.Consumer>\r\n          {context =>\r\n            context.authenticated ? (\r\n              <>\r\n                <Toolbar drawerToggleClicked={this.toggleSideDrawerHandler} />\r\n                <SideDrawer\r\n                  isOpen={this.state.sideDrawerIsShown}\r\n                  close={this.toggleSideDrawerHandler}\r\n                />\r\n              </>\r\n            ) : null\r\n          }\r\n        </AuthContext.Consumer>\r\n        <main className={classes.Content}>{this.props.children}</main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nimport Card from '../../components/Card/Card';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\r\n\r\nimport classes from './RecoveryPassword.module.scss';\r\n\r\nclass RecoveryPassword extends Component {\r\n  state = {\r\n    emailSentMessage: false,\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.setState({ error: null, loading: true });\r\n        const data = {\r\n          email: values.email,\r\n        };\r\n        console.log('Received values of form: ', values);\r\n        axios\r\n          .post('user/recovery', data)\r\n         \r\n          .then(res => {\r\n            console.log(res);\r\n            this.setState({ emailSentMessage: true, loading: false });\r\n          })\r\n          .catch(error => {\r\n            console.log(error.response.data.message);\r\n            this.setState({\r\n              error: error.response.data.message,\r\n              loading: false,\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { emailSentMessage, error, loading } = this.state;\r\n\r\n    let form = emailSentMessage ? (\r\n      <p>\r\n        An email has been sent to the supplied email address. Please, follow the\r\n        instruction in the email to reset your password.\r\n      </p>\r\n    ) : (\r\n      <>\r\n        <p>\r\n          We will send a password reset link to your email address.\r\n        </p>\r\n        <Form onSubmit={this.handleSubmit} className={classes.loginForm}>\r\n          <Form.Item>\r\n            {getFieldDecorator('email', {\r\n              rules: [\r\n                {\r\n                  type: 'email',\r\n                  message: 'The input is not valid E-mail!',\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your E-mail!',\r\n                },\r\n              ],\r\n            })(<Input placeholder='E-mail' />)}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              type='primary'\r\n              htmlType='submit'\r\n              className={classes.loginFormButton}\r\n            >\r\n              Reset password\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Link to={'/login'}>Login in</Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.RecoveryPassword}>\r\n        <Card>\r\n          <h1>Recover your password</h1>\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n          {loading && <Spinner showBackground />}\r\n          {form}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedRecoveryPassword = Form.create({ name: 'normal_login ' })(\r\n  RecoveryPassword\r\n);\r\n\r\nexport default WrappedRecoveryPassword;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Input, Button, message } from 'antd';\r\n\r\nimport Card from '../../components/Card/Card';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\r\n\r\nimport classes from './ResetPassword.module.scss';\r\n\r\nconst key = 'updatable';\r\n\r\nclass ResetPassword extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true, error: null });\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        // message.loading({content: 'Sending...', key});\r\n        console.log('Received values of form: ', values);\r\n        const data = {\r\n          token: this.props.match.params.token,\r\n          password: values.password,\r\n        };\r\n\r\n        axios\r\n          .put('/user/reset', data)\r\n          .then(res => {\r\n            this.setState({ loading: false });\r\n            message.success({content: 'Success!', key, duration: .5})\r\n            console.log(res);\r\n            // setTimeout(() => {\r\n            //   this.props.history.push('/login');\r\n            // }, 500)\r\n            this.props.history.push('/login');\r\n            console.log(this.props);\r\n          })\r\n          .catch(error => {\r\n            console.log(error.response);\r\n            this.setState({\r\n              error: error.response.data.message,\r\n              loading: false,\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { error, loading } = this.state;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div className={classes.ResetPassword}>\r\n        <Card>\r\n          <h1>Reset your password</h1>\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n          {loading && <Spinner showBackground />}\r\n          <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n            <Form.Item label='New Password' hasFeedback>\r\n              {getFieldDecorator('password', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your Password!',\r\n                  },\r\n                  {\r\n                    pattern: /^(?=.*[0-9])(?=.*[a-zA-Z])[0-9a-zA-Z!@#$%^&*]{6,18}$/,\r\n                    message: 'Must be 6-18 chars (include 1 letter and number)'\r\n                  },\r\n                  {\r\n                    validator: this.validateToNextPassword,\r\n                  },\r\n                ],\r\n              })(<Input.Password />)}\r\n            </Form.Item>\r\n            <Form.Item label='Confirm Password' hasFeedback>\r\n              {getFieldDecorator('confirm', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: 'Please confirm your password!',\r\n                  },\r\n                  {\r\n                    validator: this.compareToFirstPassword,\r\n                  },\r\n                ],\r\n              })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type='primary' htmlType='submit'>\r\n                Send Password\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedResetPassword = Form.create({ name: 'reset' })(ResetPassword);\r\n\r\nexport default WrappedResetPassword;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport { Form, InputNumber, Button, Radio, DatePicker, message } from 'antd';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\r\nimport Card from '../../components/Card/Card';\r\n\r\nimport classes from './CreateLog.module.scss';\r\n\r\n\r\nclass CreateLog extends Component {\r\n  state = {\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.setState({ error: null, loading: true });\r\n        const log = {\r\n          role: values.role,\r\n          rating: values.rating,\r\n          date: values.date,\r\n        };\r\n        console.log('Received values of form: ', values);\r\n        axios\r\n          .post('/log/create', log)\r\n          .then(res => {\r\n            this.setState({ loading: false});\r\n            message.success('The Log has been successfully created!', 1.3)\r\n          })\r\n          .catch(err => {\r\n            this.setState({ error: err.data.message });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { error, loading } = this.state;\r\n\r\n    let form = loading ? (\r\n      <Spinner />\r\n    ) : (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Form.Item>\r\n          {getFieldDecorator('role', {\r\n            initialValue: '1',\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please choose your role!',\r\n              },\r\n            ],\r\n          })(\r\n            <Radio.Group buttonStyle='solid' size='large'>\r\n              <Radio.Button value='1'>Tank</Radio.Button>\r\n              <Radio.Button value='2'>Damage</Radio.Button>\r\n              <Radio.Button value='3'>Support</Radio.Button>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          {getFieldDecorator('date', {\r\n            initialValue: moment(),\r\n            rules: [\r\n              {\r\n                type: 'object',\r\n                required: true,\r\n                message: 'Please select time!',\r\n              },\r\n            ],\r\n          })(<DatePicker size='large' />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          {getFieldDecorator('rating', {\r\n            // initialValue: 1,\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'You forgot to type your rating!',\r\n              },\r\n            ],\r\n          })(<InputNumber min={1} max={6000} size='large' />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n    return (\r\n      <div className={classes.CreateLog}>\r\n        <Card>\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n          {form}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedCreateLog = Form.create({ name: 'createLog' })(CreateLog);\r\n\r\nexport default WrappedCreateLog;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport Login from './containers/Login/Login';\r\nimport Register from './containers/Register/Register';\r\nimport Layout from './containers/Layout/Layout';\r\nimport RecoveryPassword from './containers/RecoveryPassword/RecoveryPassword';\r\nimport ReserPassword from './containers/ResetPassword/ResetPassword';\r\nimport CreateLog from './containers/CreateLog/CreateLog';\r\nimport AuthContext from './context/authentication';\r\n\r\nconst MainPage = React.lazy(() => import('./containers/MainPage/MainPage'));\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isAuthenticated: !!localStorage.token,\r\n  };\r\n\r\n  render() {\r\n    const { isAuthenticated } = this.state;\r\n    console.log(isAuthenticated);\r\n    let routes = (\r\n      <Switch>\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/recovery/password' component={RecoveryPassword} />\r\n        <Route path='/register' component={Register} />\r\n        <Route path='/reset/password/:token' component={ReserPassword} />\r\n        <Redirect to='/login' />\r\n      </Switch>\r\n    );\r\n\r\n    if (isAuthenticated) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path='/create' component={CreateLog} />\r\n          <Route path='/' component={MainPage} />\r\n        </Switch>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <AuthContext.Provider\r\n          value={{\r\n            authenticated: isAuthenticated,\r\n            logout: () => {\r\n              localStorage.clear();\r\n              this.setState({ isAuthenticated: false })\r\n            },\r\n            login: () => {\r\n              this.setState({ isAuthenticated: true })\r\n            },\r\n          }}\r\n        >\r\n          <Layout>{routes}</Layout>\r\n        </AuthContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Spinner from './components/Spinner/Spinner';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './css/styles.scss';\r\nimport './css/antdStyles.scss';\r\n\r\naxios.defaults.baseURL = 'https://ow-logger.herokuapp.com/api/';\r\naxios.defaults.headers.common['Authorization'] = localStorage.token;\r\n\r\nconst app = (\r\n    <BrowserRouter>\r\n        <Suspense fallback={<Spinner />}>\r\n            <App />\r\n        </Suspense>\r\n    </BrowserRouter>\r\n);\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\n\r\nimport classes from './Card.module.scss';\r\n\r\nconst Card = props => {\r\n  return <div className={classes.Card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport classes from './ErrorMessage.module.scss';\r\n\r\nconst ErrorMessage = props => {\r\n    return (\r\n        <div className={classes.ErrorMessage}>{props.children}</div>\r\n    );\r\n}\r\n\r\nexport default ErrorMessage;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__xFb1M\",\"Open\":\"SideDrawer_Open__3Jfp3\",\"Close\":\"SideDrawer_Close__21k-g\",\"Logo\":\"SideDrawer_Logo__3j9TJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__2_m8j\",\"loginForm\":\"Login_loginForm__3ORBP\",\"loginFormForgot\":\"Login_loginFormForgot__8_N58\",\"loginFormButton\":\"Login_loginFormButton__3F3aK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Register\":\"Register_Register__2JoUu\",\"Button\":\"Register_Button__3fALq\",\"loginFormForgot\":\"Register_loginFormForgot__13uKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__jZrKL\",\"active\":\"NavigationItem_active__1ktGU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1SFCF\",\"Logo\":\"Toolbar_Logo__kU-qE\",\"MobileOnly\":\"Toolbar_MobileOnly__3kH71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RecoveryPassword\":\"RecoveryPassword_RecoveryPassword__3s-q3\",\"loginForm\":\"RecoveryPassword_loginForm__FX38X\",\"loginFormButton\":\"RecoveryPassword_loginFormButton__mgDLg\"};"],"sourceRoot":""}